name: CI and Release
on:
  - push
  - pull_request

jobs:
  build:
    name: Build maven application
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B package
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
        name: SonarCloud Scan
        run: "mvn verify sonar:sonar"
      - name: Save build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: LoupGarou
          path: target/LoupGarou.jar
  docker:
    name: Create and Push docker image
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: LoupGarou
          path: target
      - name: Build and push docker image
        uses: docker/build-push-action@v1
        with:
          dockerfile: docker/Dockerfile
          password: "${{ secrets.DOCKER_PASSWORD }}"
          repository: thecampagnards/loup-garou
          tag_with_ref: true
          username: "${{ secrets.DOCKER_USERNAME }}"
  release:
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Upload Release Asset
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: LoupGarou
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        name: Create Release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: "Release ${{ github.ref }}"
          tag_name: "${{ github.ref }}"
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: upload-release-asset
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          asset_content_type: application/java-archive
          asset_name: "LoupGarou-${{ github.ref }}.jar"
          asset_path: LoupGarou.jar
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
